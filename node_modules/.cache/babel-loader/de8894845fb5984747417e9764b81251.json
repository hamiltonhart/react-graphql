{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/georgehart/Documents/WebDev/boilerplate/django-graphql-react-boilerplate/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/georgehart/Documents/WebDev/boilerplate/django-graphql-react-boilerplate/frontend/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    isLoggedIn @client\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Auth from \"./components/Auth\";\nimport Primary from \"./components/Primary\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst App = () => {\n  const _useQuery = useQuery(IS_LOGGED_IN_QUERY),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading\");\n  if (error) return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Error: \", error);\n  return data.isLoggedIn ? React.createElement(Primary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nconst IS_LOGGED_IN_QUERY = gql(_templateObject());\nexport default App;","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/boilerplate/django-graphql-react-boilerplate/frontend/src/App.js"],"names":["React","Auth","Primary","useQuery","gql","App","IS_LOGGED_IN_QUERY","data","loading","error","isLoggedIn"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACiBF,QAAQ,CAACG,kBAAD,CADzB;AAAA,QACRC,IADQ,aACRA,IADQ;AAAA,QACFC,OADE,aACFA,OADE;AAAA,QACOC,KADP,aACOA,KADP;;AAGhB,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAZ,CAAP;AACX,SAAOF,IAAI,CAACG,UAAL,GAAkB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAAgC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC;AACD,CAND;;AAQA,MAAMJ,kBAAkB,GAAGF,GAAH,mBAAxB;AAMA,eAAeC,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Auth from \"./components/Auth\";\nimport Primary from \"./components/Primary\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst App = () => {\n  const { data, loading, error } = useQuery(IS_LOGGED_IN_QUERY);\n\n  if (loading) return <h1>Loading</h1>;\n  if (error) return <h1>Error: {error}</h1>;\n  return data.isLoggedIn ? <Primary /> : <Auth />;\n}\n\nconst IS_LOGGED_IN_QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}